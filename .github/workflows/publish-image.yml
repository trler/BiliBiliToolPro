name: Publish image

on:
  workflow_dispatch:
    inputs:
      autoWithLatestTag:
        description: 'Auto Add Latest Tag'
        required: true
        default: true
        type: boolean
  release:
    types: [created]
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'Dockerfile'
      - 'Dockerfile.alternative'
      - '.github/workflows/publish-image.yml'

permissions:
  contents: read
  packages: write

env:
  DOCKERHUB_USERNAME : ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD : ${{ secrets.DOCKERHUB_PASSWORD }}
  GHCR_USERNAME: ${{ github.repository_owner }}
  GHCR_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  DOCKER_IMG_NAME: "trler/bili_tool_web"
  GHC_IMG_NAME: "ghcr.io/trler/bili_tool_web"

jobs:
  PublishImage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: GetTargetVersion
        id: getTargetVersion
        run: |
          TargetVersion=""
          if [ "${{ github.event.release.tag_name }}" ] ; then
            TargetVersion=${{ github.event.release.tag_name }}
          else
            TargetVersion=$(grep -oP '(?<=<Version>).*?(?=<\/Version>)' ./common.props)
          fi
          echo "TargetVersion: $TargetVersion"
          echo "TargetVersion=$TargetVersion" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_PASSWORD != ''
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_PASSWORD }}

      - name: Log in to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.GHCR_USERNAME }}
          password: ${{ env.GHCR_PASSWORD }}

      - name: Generate tags
        id: tags
        run: |
          targetVersion="${{ steps.getTargetVersion.outputs.TargetVersion }}"
          dockerTagWithVersion="${{ env.DOCKER_IMG_NAME }}:$targetVersion"
          ghcrTagWithVersion="${{ env.GHC_IMG_NAME }}:$targetVersion"
          dockerTagWithLatest=""
          ghcrTagWithLatest=""
          
          # 总是添加latest标签
          dockerTagWithLatest="${{ env.DOCKER_IMG_NAME }}:latest"
          ghcrTagWithLatest="${{ env.GHC_IMG_NAME }}:latest"
          
          echo "dockerTagWithVersion=$dockerTagWithVersion" >> $GITHUB_OUTPUT
          echo "ghcrTagWithVersion=$ghcrTagWithVersion" >> $GITHUB_OUTPUT
          echo "dockerTagWithLatest=$dockerTagWithLatest" >> $GITHUB_OUTPUT
          echo "ghcrTagWithLatest=$ghcrTagWithLatest" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.alternative
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ steps.tags.outputs.ghcrTagWithVersion }}
            ${{ steps.tags.outputs.ghcrTagWithLatest }}
            ${{ steps.tags.outputs.dockerTagWithVersion }}
            ${{ steps.tags.outputs.dockerTagWithLatest }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
